console.log("Every Frame a Spider Starting!");

import { TwitterApi } from "twitter-api-v2";
import { config } from "./config";
import { MAX_FRAME, MIN_FRAME } from "./const";
import { getFrame } from "./ffmpeg";
import {
  getArr,
  getBorderIndex,
  getRemainingUsedFrames,
  removeFrame,
} from "./fs";

const client = new TwitterApi(config);

// DONE: Frame Picker
/*
    1. gets random num for num of frames remaining
    2. return number to reference for the tweet
 */
const pickFrame = (): number => {
  const max = MAX_FRAME + 1;
  const min = MIN_FRAME;

  let diff = max - min;

  let rand = Math.random();
  rand = Math.floor(rand * diff);
  rand += min;

  return rand;
};

// // DONE: generalize inside of postFrame function
// // TODO: frame alt text maybe?
const postFrame = async () => {
  const frameNum = await pickFrame();
  const framePath = await getFrame(frameNum);

  // You can use media IDs generated by v1 API to send medias!
  const mediaId = await client.v1.uploadMedia(`${framePath}`);

  const resPost = await client.v2.tweetThread([
    {
      text: `Frame: ${frameNum}`,
      media: { media_ids: [mediaId] },
    },
  ]);

  if (await resPost) {
    console.log("Tweet", resPost, ":", resPost);
  } else throw new Error("Could not complete your post");
  console.log("Your post is complete!");
};

//DONE: Execute
// postFrame(pickFrame, freeFrame);
postFrame();

